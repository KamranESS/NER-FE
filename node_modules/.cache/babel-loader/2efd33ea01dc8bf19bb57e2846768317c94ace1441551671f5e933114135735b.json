{"ast":null,"code":"var _jsxFileName = \"/home/ner/ReactJS/NER-FE/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { Paper, Typography, Box, Snackbar } from \"@mui/material\";\nimport { useDropzone } from \"react-dropzone\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedImageFormats = [\"image/jpeg\", \"image/png\", \"image/gif\"];\nconst FileUpload = ({\n  onFilesSelect\n}) => {\n  _s();\n  const [showWarning, setShowWarning] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    const nonImageFiles = acceptedFiles.filter(file => !allowedImageFormats.includes(file.type));\n    if (nonImageFiles.length > 0) {\n      setShowWarning(true);\n    } else {\n      setShowWarning(false);\n      onFilesSelect(acceptedFiles);\n    }\n  }, [onFilesSelect]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: allowedImageFormats.join(\",\"),\n    multiple: true\n  });\n  const handleCloseWarning = () => {\n    setShowWarning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      marginTop: \"5rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper\n    // variant=\"outlined\"\n    , {\n      elevation: 9,\n      sx: {\n        padding: \"20px\",\n        //   height: \"20vh\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n        color: \"black\",\n        transition: \"background-color 0.3s ease\",\n        \"&:hover\": {\n          backgroundColor: \"#0797b8\"\n        }\n      },\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        children: \"Drop image files here or click to select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showWarning,\n      autoHideDuration: 5000,\n      onClose: handleCloseWarning,\n      message: \"Only image files (jpeg, png, gif) are allowed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"xVpN3A18z2E6aNhIRydHlUTeiV0=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useState","Paper","Typography","Box","Snackbar","useDropzone","CloudUploadIcon","jsxDEV","_jsxDEV","allowedImageFormats","FileUpload","onFilesSelect","_s","showWarning","setShowWarning","onDrop","acceptedFiles","nonImageFiles","filter","file","includes","type","length","getRootProps","getInputProps","accept","join","multiple","handleCloseWarning","sx","marginTop","children","elevation","padding","textAlign","cursor","backgroundColor","color","transition","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","variant","component","open","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/home/ner/ReactJS/NER-FE/src/components/FileUpload.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { Paper, Typography, Box, Snackbar } from \"@mui/material\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\n\r\nconst allowedImageFormats = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n\r\nconst FileUpload = ({ onFilesSelect }) => {\r\n  const [showWarning, setShowWarning] = useState(false);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const nonImageFiles = acceptedFiles.filter(\r\n        (file) => !allowedImageFormats.includes(file.type)\r\n      );\r\n      if (nonImageFiles.length > 0) {\r\n        setShowWarning(true);\r\n      } else {\r\n        setShowWarning(false);\r\n        onFilesSelect(acceptedFiles);\r\n      }\r\n    },\r\n    [onFilesSelect]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: allowedImageFormats.join(\",\"),\r\n    multiple: true,\r\n  });\r\n\r\n  const handleCloseWarning = () => {\r\n    setShowWarning(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginTop: \"5rem\" }}>\r\n      <Paper\r\n        // variant=\"outlined\"\r\n        elevation={9}\r\n        sx={{\r\n          padding: \"20px\",\r\n          //   height: \"20vh\",\r\n          textAlign: \"center\",\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#fff\",\r\n          color: \"black\",\r\n          transition: \"background-color 0.3s ease\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"#0797b8\",\r\n          },\r\n        }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <CloudUploadIcon fontSize=\"large\" />\r\n        <Typography variant=\"subtitle1\" component=\"p\">\r\n          Drop image files here or click to select\r\n        </Typography>\r\n      </Paper>\r\n      <Snackbar\r\n        open={showWarning}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseWarning}\r\n        message=\"Only image files (jpeg, png, gif) are allowed.\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,eAAe;AAChE,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,mBAAmB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC;AAEpE,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,MAAM,GAAGhB,WAAW,CACvBiB,aAAa,IAAK;IACjB,MAAMC,aAAa,GAAGD,aAAa,CAACE,MAAM,CACvCC,IAAI,IAAK,CAACV,mBAAmB,CAACW,QAAQ,CAACD,IAAI,CAACE,IAAI,CACnD,CAAC;IACD,IAAIJ,aAAa,CAACK,MAAM,GAAG,CAAC,EAAE;MAC5BR,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC;MACrBH,aAAa,CAACK,aAAa,CAAC;IAC9B;EACF,CAAC,EACD,CAACL,aAAa,CAChB,CAAC;EAED,MAAM;IAAEY,YAAY;IAAEC;EAAc,CAAC,GAAGnB,WAAW,CAAC;IAClDU,MAAM;IACNU,MAAM,EAAEhB,mBAAmB,CAACiB,IAAI,CAAC,GAAG,CAAC;IACrCC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA,CAACL,GAAG;IAAC0B,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7BvB,OAAA,CAACP;IACC;IAAA;MACA+B,SAAS,EAAE,CAAE;MACbH,EAAE,EAAE;QACFI,OAAO,EAAE,MAAM;QACf;QACAC,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE,SAAS;QACjBC,eAAe,EAAE,MAAM;QACvBC,KAAK,EAAE,OAAO;QACdC,UAAU,EAAE,4BAA4B;QACxC,SAAS,EAAE;UACTF,eAAe,EAAE;QACnB;MACF,CAAE;MAAA,GACEb,YAAY,CAAC,CAAC;MAAAQ,QAAA,gBAElBvB,OAAA;QAAA,GAAWgB,aAAa,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BlC,OAAA,CAACF,eAAe;QAACqC,QAAQ,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpClC,OAAA,CAACN,UAAU;QAAC0C,OAAO,EAAC,WAAW;QAACC,SAAS,EAAC,GAAG;QAAAd,QAAA,EAAC;MAE9C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACRlC,OAAA,CAACJ,QAAQ;MACP0C,IAAI,EAAEjC,WAAY;MAClBkC,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEpB,kBAAmB;MAC5BqB,OAAO,EAAC;IAAgD;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA7DIF,UAAU;EAAA,QAkB0BL,WAAW;AAAA;AAAA6C,EAAA,GAlB/CxC,UAAU;AA+DhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}